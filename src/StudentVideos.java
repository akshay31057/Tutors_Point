

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author hp-
 */
public class StudentVideos extends javax.swing.JFrame implements Serializable{

    /**
     * Creates new form StudentVideos
     */
    static Socket socket;
    static StudentData student;
    static DataInputStream din;
    static DataOutputStream dout;
    static ObjectInputStream doin;
    static ObjectOutputStream doout;
    static FetchSubtopicData fData;
    static  public int port;
    static int pass;
    
    public StudentVideos(){
        initComponents();
    } 
   public StudentVideos(Socket socke,ObjectOutputStream doou,ObjectInputStream doi,DataOutputStream dou,DataInputStream di,FetchSubtopicData fDat,StudentData studen,int p) {
        doout=doou;
        doin=doi;
        dout=dou;
        din=di;
        pass=p;
        
        fData=fDat;
        socket= socke;
        student=studen;
        
        initComponents();
        
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        if(pass==1){
        RefreshButtonActionPerformed(null);
        }
        else {
         RefreshButton.setEnabled(false);
         try{
            FetchSubtopicData fata=new FetchSubtopicData();
            fata.setCourseName(fData.getCourseName());
            fata.setSubtopicName(fData.getSubtopicName());
            fata.setTeacherName(fData.getTeacherName());
            fata.setTeacherReference(fData.getTeacherReference());
            fata.setRequest(20);
            doout.writeObject(fata);

            DefaultListModel<Video> model=new DefaultListModel<Video>();
            String str="";
            str=(String)din.readUTF();
            int reference = Integer.parseInt(str);
            if(reference==1){
                model=(DefaultListModel)doin.readObject();
                VideoList.setModel(model);
                //VideoList.setModel(listModel);
                VideoList.setCellRenderer(new CountryRenderer());
            }
            else {
                System.out.println("List not returned");
            }
           }
        catch(Exception e){
            System.out.println("Unable to fetch list");
            e.printStackTrace();
        }
         
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        SubTopicLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        VideoList = new javax.swing.JList();
        RefreshButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SubTopicLabel.setFont(new java.awt.Font("Monotype Corsiva", 3, 18)); // NOI18N
        SubTopicLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SubTopicLabel.setText("VIDEOS");

        VideoList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        VideoList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VideoListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(VideoList);

        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(175, Short.MAX_VALUE)
                .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addComponent(SubTopicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(SubTopicLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VideoListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VideoListMouseClicked
  if (evt.getClickCount() == 2) {
               try {
            // TODO add your handling code here:
            System.out.println((socket.getInetAddress().toString()).substring(1));
            FetchSubtopicData fDat= new FetchSubtopicData();
            
            
            fDat.setRequest(11);

            doout.writeObject(fDat);
            port= din.readInt();
            String selVideo=((Video)(VideoList.getModel().getElementAt(VideoList.getSelectedIndex()))).getPath();
            JOptionPane.showMessageDialog(null,selVideo);
            dout.writeUTF(selVideo);
            String[] arr=new String[1];
            arr[0]=selVideo;
            FetchSubtopicData fD=fData;
            fD.setVideoName(selVideo);
           
            //fD.setTeacherName(student.getName());
            new Thread(new MediaPlayer(socket,port,fD,doout)).start();//new Thread(new MediaPlayer(selVideo,socket,port)).start();
            //this.setVisible(true);

        } catch (IOException ex) {
            Logger.getLogger(StudentVideos.class.getName()).log(Level.SEVERE, null, ex);
        }
  }
    }//GEN-LAST:event_VideoListMouseClicked

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        // TODO add your handling code here:
        try{
            FetchSubtopicData fata=new FetchSubtopicData();
            fata.setCourseName(fData.getCourseName());
            fata.setSubtopicName(fData.getSubtopicName());
            fata.setTeacherName(student.getName());
            //fata.setTeacherReference(student.getReferece());
            fata.setRequest(13);
            doout.writeObject(fata);

            DefaultListModel<Video> model=new DefaultListModel<Video>();
            String str="";
            str=(String)din.readUTF();
            int reference = Integer.parseInt(str);
            if(reference==1){
                model=(DefaultListModel)doin.readObject();
                VideoList.setModel(model);
                //VideoList.setModel(listModel);
                VideoList.setCellRenderer(new CountryRenderer());
            }
            else {
                System.out.println("List not returned");
            }

            /*Video v1 = new Video("Learning Java by John A. Cena", "vid2.mp4","A");
            Video v2 = new Video("Learning Java by John A. Cena", "vid2.mp4","A");
            Video v3 = new Video("Learning Java by John A. Cena", "vid2.mp4","D");
            // Video v4 = new Video("Learning Java by John A. Cena", "vid2.mp4");
            //Video v5 = new Video("Learning Java by John A. Cena","vid2.mp4");

            //create the model and add elements
            DefaultListModel<Video> listModel = new DefaultListModel<>();
            listModel.addElement(v1);
            listModel.addElement(v2);
            listModel.addElement(v3);
            VideoList.setModel(listModel);
            //VideoList.setModel(listModel);
            VideoList.setCellRenderer(new CountryRenderer());
            //listModel.addElement(v4);
            //listModel.addElement(v5);

            */
            //create the list

        }
        catch(Exception e){
            System.out.println("Unable to fetch list");
            e.printStackTrace();
        }

    }//GEN-LAST:event_RefreshButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentVideos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentVideos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentVideos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentVideos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentVideos(socket,doout,doin,dout,din,fData,student,pass).setVisible(true);
               // new StudentVideos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RefreshButton;
    private javax.swing.JLabel SubTopicLabel;
    private javax.swing.JList VideoList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
